using System;
using System.Collections.Generic;
using System.Collections;
using System.Linq;
using System.Text;
using System.Text.RegularExpressions;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Navigation;
using System.Windows.Shapes;
using System.IO;


namespace BabbleSample
{
    /// Babble framework
    /// Starter code for CS212 Babble assignment
    public partial class MainWindow : Window
    {
        private string input;                               // input file
        private string[] words;                             // input file broken into array of words
        private int wordCount = 200;                        // number of words to babble
        private Dictionary<string, ArrayList> hashTable = 
            new Dictionary<string, ArrayList>();            // hashTable variable

        public MainWindow()
        {
            InitializeComponent();
        }

        private void loadButton_Click(object sender, RoutedEventArgs e)
        {
            Microsoft.Win32.OpenFileDialog ofd = new Microsoft.Win32.OpenFileDialog();
            ofd.FileName = "Sample"; // Default file name
            ofd.DefaultExt = ".txt"; // Default file extension
            ofd.Filter = "Text documents (.txt)|*.txt"; // Filter files by extension

            // Show open file dialog box
            if ((bool)ofd.ShowDialog())
            {
                textBlock1.Text = "Loading file " + ofd.FileName + "\n";
                input = System.IO.File.ReadAllText(ofd.FileName);  // read file
                words = Regex.Split(input, @"\s+");       // split into array of words
            }
        }

        private void analyzeInput(int order)
        {
            if (order == 0)
            {
                MessageBox.Show("Analyzing at order: " + order);
            }
            if (order == 1)
            {
                MessageBox.Show("Analyzing at order: " + order);

                if (words != null)
                {
                    for (int i = 0; i < words.Length; i++)
                    {
                        if (!hashTable.ContainsKey(words[i]))
                            hashTable.Add(words[i], new ArrayList());
                        if (i != words.Length - 1)
                            hashTable[words[i]].Add(words[i + 1]);
                        else
                            hashTable[words[i]].Add(words[0]);
                    }
                }
            }
            if (order == 2)
            {
                MessageBox.Show("Analyzing at order: " + order);
            }
            if (order == 3)
            {
                MessageBox.Show("Analyzing at order: " + order);
            }
            if (order == 4)
            {
                MessageBox.Show("Analyzing at order: " + order);
            }
            if (order == 5)
            {
                MessageBox.Show("Analyzing at order: " + order);
            }
        }

        private void babbleButton_Click(object sender, RoutedEventArgs e)
        {
            string keyWord = words[0];
            for (int i = 0; i < wordCount; i++)
            {
                Random rnd = new Random();
                textBlock1.Text += " " + keyWord;
                keyWord = (string) hashTable[keyWord][rnd.Next(0, hashTable[keyWord].Count)];
            }
        }

        private void orderComboBox_SelectionChanged(object sender, SelectionChangedEventArgs e)
        {
            analyzeInput(orderComboBox.SelectedIndex);
        }
    }
}
